[ftplugin]
denite = '''
nnoremap <silent><buffer><expr> <cr>    denite#do_map('do_action')
nnoremap <silent><buffer><expr> <tab>   denite#do_map('choose_action')
nnoremap <silent><buffer><expr> <c-l>   denite#do_map('redraw')
nnoremap <silent><buffer><expr> <esc>   denite#do_map('quit')
nnoremap <silent><buffer><expr> <space> denite#do_map('toggle_select').'j'
nnoremap <silent><buffer><expr> *       denite#do_map('toggle_select_all')
nnoremap <silent><buffer><expr> i       denite#do_map('open_filter_buffer')
nnoremap <silent><buffer><expr> u       denite#do_map('restore_sources')
'''
denite-filter = '''
inoremap <silent><buffer><expr> <cr>    denite#do_map('do_action')
inoremap <silent><buffer><expr> <tab>   denite#do_map('choose_action')
inoremap <silent><buffer><expr> <c-l>   denite#do_map('redraw')
imap     <silent><buffer>       <esc>   <Plug>(denite_filter_quit)
'''

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'haya14busa/is.vim'

[[plugins]]
repo = 'sheerun/vim-polyglot'
build = 'bash ./build'

[[plugins]]
repo = 'joshdick/onedark.vim'
hook_add = 'colorscheme onedark'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
let g:airline_theme = 'onedark'
let g:airline_powerline_fonts = 1
'''

[[plugins]]
repo = 'joonty/vdebug'
hook_add = '''
let g:vdebug_keymap = {
    \ 'run': '<space>r',
    \ 'run_to_cursor': '<space>c',
    \ 'step_over': '<space>j',
    \ 'step_into': '<space>l',
    \ 'step_out': '<space>h',
    \ 'close': '<space>q',
    \ 'detach': '<space>d',
    \ 'set_breakpoint': '<space>b',
    \ 'get_context': '<space>*',
    \ 'eval_under_cursor': '<space>?',
    \ 'eval_visual': '<space>?',
\ }
let g:vdebug_options = {'break_on_open': 0, 'port': 9000, 'server': '0.0.0.0', 'path_maps': {'/project/': '/project/'}}
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = '''
call denite#custom#var('file/rec', 'command', ['rg', '--files', '--glob', '!.git'])
call denite#custom#var('grep', 'command', ['rg'])
call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep', '--no-heading'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', ['--regexp'])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])
call denite#custom#option('_', {'auto_resume': 1, 'auto_resize': 1, 'start_filter': 1, 'split': 'floating', 'prompt': '$'})
call denite#custom#source('grep', 'converters', ['converter/abbr_word'])
'''

[[plugins]]
repo = 'tk-shirasaka/denite-utils'
hook_add = 'noremap <silent><tab> :Denite source command<CR>'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
call deoplete#enable()
call deoplete#custom#option({'ignore_case': 1, 'ignore_sources': {'_': ['around', 'file', 'member', 'omni']}})
call deoplete#custom#option('sources', {'denite-filter': ['denite']})
'''

[[plugins]]
repo = 'haorenW1025/diagnostic-nvim'

[[plugins]]
repo = 'neovim/nvim-lsp'
hook_source = '''
lua require'nvim_lsp'.bashls.setup{}
lua require'nvim_lsp'.vimls.setup{}
lua require'nvim_lsp'.pyls.setup{}
lua require'nvim_lsp'.gopls.setup{}
lua require'nvim_lsp'.intelephense.setup{}
lua require'nvim_lsp'.tsserver.setup{}
lua require'nvim_lsp'.dockerls.setup{}
lua require'nvim_lsp'.html.setup{}
lua require'nvim_lsp'.cssls.setup{}
lua require'nvim_lsp'.jsonls.setup{}
lua require'nvim_lsp'.yamlls.setup{}
'''

[[plugins]]
repo = 'Shougo/deoplete-lsp'

[[plugins]]
repo = 'zchee/deoplete-zsh'

[[plugins]]
repo = 'Shougo/deol.nvim'
hook_add = 'let g:deol#prompt_pattern = "% \|%$"'

[[plugins]]
repo = 'Shougo/echodoc.vim'
hook_add = '''
let g:echodoc#enable_at_startup = 1
let g:echodoc#type = 'floating'
'''

[[plugins]]
repo = 'tk-shirasaka/ejdict.nvim'
