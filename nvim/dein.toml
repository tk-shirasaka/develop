[ftplugin]
denite = '''
nnoremap <silent><buffer><expr> <cr>    denite#do_map('do_action')
nnoremap <silent><buffer><expr> <tab>   denite#do_map('choose_action')
nnoremap <silent><buffer><expr> <c-l>   denite#do_map('redraw')
nnoremap <silent><buffer><expr> <esc>   denite#do_map('quit')
nnoremap <silent><buffer><expr> <space> denite#do_map('toggle_select').'j'
nnoremap <silent><buffer><expr> *       denite#do_map('toggle_select_all')
nnoremap <silent><buffer><expr> i       denite#do_map('open_filter_buffer')
nnoremap <silent><buffer><expr> u       denite#do_map('restore_sources')
nnoremap <silent><buffer><expr> -       denite#do_map('move_up_path')
'''

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'machakann/vim-sandwich'

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
let g:EasyMotion_verbose = 0
'''

[[plugins]]
repo = 'haya14busa/is.vim'

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'sainnhe/edge'
hook_add = '''
let g:edge_enable_italic = 1
colorscheme edge
'''

[[plugins]]
repo = 'norcalli/nvim-colorizer.lua'
hook_add = '''
set termguicolors
lua require'colorizer'.setup{ '*' }
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
let g:airline_theme = 'edge'
let g:airline_powerline_fonts = 1
'''

[[plugins]]
repo = 'joonty/vdebug'
hook_add = '''
let g:vdebug_options = {'break_on_open': 0, 'port': 9000, 'server': '0.0.0.0', 'path_maps': {'/project/': '/project/'}}
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = '''
call denite#custom#var('file/rec', 'command', ['rg', '--files', '--glob', '!.git'])
call denite#custom#var('grep', 'command', ['rg'])
call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep', '--no-heading'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', ['--regexp'])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])
call denite#custom#option('_', {'auto_resize': 1, 'split': 'floating', 'prompt': 'ï„ '})
call denite#custom#source('grep', { 'args': ['', '', '!'] })
call denite#custom#source('deol', { 'args': ['-edit -split=floating'] })

noremap <silent><tab> :Denite source command<CR>
'''

[[plugins]]
repo = 'tk-shirasaka/denite-utils'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
call deoplete#enable()
call deoplete#custom#option({'ignore_case': 1, 'ignore_sources': {'_': ['around', 'file', 'member', 'omni']}})
call deoplete#custom#option('sources', {'denite-filter': ['denite']})
'''

[[plugins]]
repo = 'neovim/nvim-lsp'
hook_source = '''
lua << EOF
local nvim_lsp = require'nvim_lsp'
local diagnostic = require'diagnostic'
nvim_lsp.util.default_config = vim.tbl_extend("force", nvim_lsp.util.default_config, { on_attach=diagnostic.on_attach })
nvim_lsp.bashls.setup{}
nvim_lsp.sumneko_lua.setup{ cmd = { "lua-language-server" } }
nvim_lsp.vimls.setup{}
nvim_lsp.pyls_ms.setup{}
nvim_lsp.gopls.setup{}
nvim_lsp.intelephense.setup{}
nvim_lsp.tsserver.setup{}
nvim_lsp.dockerls.setup{}
nvim_lsp.html.setup{}
nvim_lsp.cssls.setup{}
nvim_lsp.jsonls.setup{}
nvim_lsp.yamlls.setup{}
EOF
'''

[[plugins]]
repo = 'nvim-lua/diagnostic-nvim'

[[plugins]]
repo = 'Shougo/deoplete-lsp'
hook_source = '''
call deoplete#lsp#enable()
'''

[[plugins]]
repo = 'zchee/deoplete-zsh'

[[plugins]]
repo = 'Shougo/deol.nvim'
hook_add = 'let g:deol#prompt_pattern = "% \|%$"'

[[plugins]]
repo = 'tk-shirasaka/ejdict.nvim'

[[plugins]]
repo = 'liuchengxu/vista.vim'
hook_add = '''
let g:vista_default_executive = 'nvim_lsp'
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
merged = 0
hook_source = '''
set foldmethod=expr foldexpr=nvim_treesitter#foldexpr()
lua << EOF
require'nvim-treesitter.configs'.setup {
    highlight = { enable = true },
    refactor = {
        highlight_definitions = { enable = true },
        highlight_current_scope = { enable = true },
        smart_rename = { enable = true },
        navigation = { enable = true },
    },
    incremental_selection = { enable = true },
    textobjects = { enable = true },
    ensure_installed = "all",
    playground = { enable = true }
}
EOF
'''

[[plugins]]
repo = 'nvim-treesitter/playground'

[[plugins]]
repo = 'tpope/vim-dadbod'

[[plugins]]
repo = 'kristijanhusak/vim-dadbod-ui'
hook_add = '''
let g:db_ui_use_nerd_fonts = 1
'''

[[plugins]]
repo = 'kristijanhusak/vim-dadbod-completion'
